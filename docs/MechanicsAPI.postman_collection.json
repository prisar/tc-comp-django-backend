{
	"info": {
		"_postman_id": "29c0c23b-8684-48e4-9f09-0e856d769089",
		"name": "MechanicsAPI",
		"description": "Mechanics API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "GET /users",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "success to get users"
							},
							"response": []
						},
						{
							"name": "success - order by email",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=email&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "email",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "success to get users - order by email"
							},
							"response": []
						},
						{
							"name": "success - offset limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=1&offset=1&sortBy=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "1",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "success to get users - offset limit"
							},
							"response": []
						},
						{
							"name": "success - order desc",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=&sortOrder=desc",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "success to get users - order desc"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=asdf&offset=&sortBy=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "asdf",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "Invalid parameter type - limit"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=asdf&sortBy=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "asdf",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "Invalid parameter type - offset"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - sortBy",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=asdf&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "asdf",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "Invalid parameter type - sortBy"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users?limit=&offset=&sortBy=&sortOrder=asdf",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "name, email, role - default 'name'"
										},
										{
											"key": "sortOrder",
											"value": "asdf",
											"description": "asc, desc - default 'asc'"
										}
									]
								},
								"description": "Invalid parameter type - sortOrder"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "55e7bde9-c3f9-4fe4-8283-e9e5ef217830",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users?Authorization=Bearer {{token}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "Authorization",
											"value": "Bearer {{token}}",
											"description": "user token"
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Invalid token not super user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "55e7bde9-c3f9-4fe4-8283-e9e5ef217830",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "{{standard-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"users"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						}
					],
					"description": "Get user lists",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6910eb16-78f1-4b9f-a3f5-8aa09d90da40",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "16bfe4a6-d50d-4283-b6d1-fe5c5a6408ee",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /users/{user_id}",
					"item": [
						{
							"name": "success",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5bd07fb7-fabf-4876-b90e-5331734a628b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"1"
									]
								},
								"description": "Get user success"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users/abc",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"abc"
									]
								},
								"description": "Malformed parameters/body"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cf90038f-cbff-4489-a5e8-241f2e371cb2",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"1"
									]
								},
								"description": "Token not exists"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8f8eb057-fbc1-4a99-993c-9d7e62f2d9e8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"100"
									]
								},
								"description": "User not found"
							},
							"response": []
						}
					],
					"description": "Get user detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d1510f32-18ed-48b9-8d01-ce9b4083c718",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5ba85ef7-9e02-4cfe-a98b-ce324d3cccc0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE /users/{user_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users/4",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"4"
									]
								},
								"description": "Delete user success"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users/abc",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"abc"
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/users/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2d3277f6-ffd7-4fee-b565-a461a735d92c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Non admin user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9489b38c-c4d3-42ba-b3b5-164760a3c6fc",
										"exec": [
											"pm.environment.set('token', 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InN0YW5kYXJkQGV4YW1wbGUuY29tIiwiaWQiOjIsIm5hbWUiOiJzdGFuZGFyZCIsInJvbGUiOiJzdGFuZGFyZCIsInRodW1ibmFpbFVybCI6bnVsbH0.qgYGdQ-Nazj3f3dBxmvgXXIJDFNWwoIXeWpcdo0BXGY');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{standard-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"1"
									]
								},
								"description": "Non-Admin user exception"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/users/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"100"
									]
								},
								"description": "User not found"
							},
							"response": []
						}
					],
					"description": "Delete user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9180bed0-aa46-45c2-af12-a78e210a20a5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c2bfa096-d202-46f5-a1c7-8b26c1745867",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT /users/{user_id}/role",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/3/role",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"3",
										"role"
									]
								},
								"description": "Role update success"
							},
							"response": []
						},
						{
							"name": "400 - Invalid newRole",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"invalid role\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/3/role",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"3",
										"role"
									]
								},
								"description": "Invalid newRole"
							},
							"response": []
						},
						{
							"name": "400 - Invalid user id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"invalid role\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/asb/role",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"asb",
										"role"
									]
								},
								"description": "Invalid user id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"standard\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/3/role",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"3",
										"role"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c54a1977-f8be-4c13-b0e6-d62e87bf7af8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"standard\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/3/role",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"3",
										"role"
									]
								},
								"description": "Invalid user token"
							},
							"response": []
						},
						{
							"name": "401 - Non admin user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c54a1977-f8be-4c13-b0e6-d62e87bf7af8",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"standard\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/3/role",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"3",
										"role"
									]
								},
								"description": "Non admin user"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newRole\": \"standard\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/100/role",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"100",
										"role"
									]
								},
								"description": "User not found"
							},
							"response": []
						}
					],
					"description": "Update user role",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "50277694-b0fa-4809-b8fd-21f4cf641008",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9501e2f1-5f07-494d-842b-e363e51dee2d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "User routes",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e3f40684-f1e1-49ff-acba-f22b441c6317",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "98916aff-9889-4169-971d-9fde120e1e55",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Worksapces",
			"item": [
				{
					"name": "GET /worksapces",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset&limit=&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get workspaces"
							},
							"response": []
						},
						{
							"name": "success - offset limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=1&limit=1&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get workspaces - offset limit"
							},
							"response": []
						},
						{
							"name": "success - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=&limit=&sortOrder=desc",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get workspaces - sortOrder"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=asb&limit&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "asb",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=&limit=asb&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "asb",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter type - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces?offset=&limit=&sortOrder=asb",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "asb",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/workspaces",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "075a8f0e-73e8-4a6e-acf5-7526b6370b09",
										"exec": [
											"pm.environment.set('token', 'Invalid token');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						}
					],
					"description": "Get workspace list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "026eb498-ff5e-4958-879f-e90e48074e62",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "15b49e2d-f040-4321-990b-9b5186f573b2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST /worksapces",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"newly created workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									]
								},
								"description": "success to create new workspace"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									]
								},
								"description": "Invalid name parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{host}}/workspaces",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0d442b46-9cb1-4a8c-8d51-4ecee98c4f7f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "409",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"workspace1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces"
									]
								},
								"description": "Duplicated name"
							},
							"response": []
						}
					],
					"description": "Create new workspaces",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7d35c501-ee40-4f73-9b86-81111abbbb22",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "df0574cc-5954-4627-8d2a-0b28ff18c82d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /workspaces/{workspace_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "success to get workspace detail"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/asd",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"asd"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1666d1ca-85b3-43b1-9fa7-96d1a928355f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not a member",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1666d1ca-85b3-43b1-9fa7-96d1a928355f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Not a member"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"100"
									]
								},
								"description": "Workspace not found"
							},
							"response": []
						}
					],
					"description": "Get workspace detail",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE /workspace/{workspace_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/3",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"3"
									]
								},
								"description": "success to delete workspace"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/asd",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"asd"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fb3e0382-991c-455a-8f0d-6724209047d0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not admin and owner",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "878dcd28-4ce6-434a-abf0-bf72e955a855",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Not admin and owner"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/workspaces/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"100"
									]
								},
								"description": "Workspace not found"
							},
							"response": []
						}
					],
					"description": "delete workspace",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PATCH /workspaces/{workspace_id}",
					"item": [
						{
							"name": "success - change name",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"workspace-editable-edited\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "success to update workspace by id - change name"
							},
							"response": []
						},
						{
							"name": "success - add member",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberUserIds\": [1, 2]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "success to update workspace by id - add member"
							},
							"response": []
						},
						{
							"name": "success - remove member",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberUserIds\": [1]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "success to update workspace by id - remove member"
							},
							"response": []
						},
						{
							"name": "success - remove project",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"projectIds\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "success to update workspace by id - remove project"
							},
							"response": []
						},
						{
							"name": "success - add project",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"projectIds\": [1]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "success to update workspace by id - add project"
							},
							"response": []
						},
						{
							"name": "success - remove rule",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleIds\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "success to update workspace by id - remove rule"
							},
							"response": []
						},
						{
							"name": "success - add rule",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleIds\": [1]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "success to update workspace by id - add rule"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new_workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/abc",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"abc"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid name parameter",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Invalid name parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid member ids",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\",\n\t\"memberUserIds\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Invalid member ids"
							},
							"response": []
						},
						{
							"name": "400 - Invalid project ids",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\",\n\t\"projectIds\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Invalid project ids"
							},
							"response": []
						},
						{
							"name": "400 - Invalid rule ids",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\",\n\t\"ruleIds\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Invalid rule ids"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e4b55a1-21c0-49df-ba62-61e9928f84bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not owner",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e4b55a1-21c0-49df-ba62-61e9928f84bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1"
									]
								},
								"description": "Not owner"
							},
							"response": []
						},
						{
							"name": "404 - workspace not found",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e4b55a1-21c0-49df-ba62-61e9928f84bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"new workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"100"
									]
								},
								"description": "Workspace not found"
							},
							"response": []
						},
						{
							"name": "404 - add not exists member",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e4b55a1-21c0-49df-ba62-61e9928f84bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"memberUserIds\": [1, 100]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "add not exists member"
							},
							"response": []
						},
						{
							"name": "404 - add not exists project",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e4b55a1-21c0-49df-ba62-61e9928f84bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"projectIds\": [1, 100]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "add not exists project"
							},
							"response": []
						},
						{
							"name": "404 - add not exists rule",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e4b55a1-21c0-49df-ba62-61e9928f84bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleIds\": [100]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "add not exists rule"
							},
							"response": []
						},
						{
							"name": "409",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e4b55a1-21c0-49df-ba62-61e9928f84bb",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"workspace1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"2"
									]
								},
								"description": "Duplicated workspace name"
							},
							"response": []
						}
					],
					"description": "update workspace by id",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST /workspaces/{workspace_id}/copy",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1",
										"copy"
									]
								},
								"description": "success to copy workspace"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/abc/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"abc",
										"copy"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "400 - invalid name",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1",
										"copy"
									]
								},
								"description": "invalid name"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1",
										"copy"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90ea29d8-15e1-4bbf-a561-29790d7837c7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1",
										"copy"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not member",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90ea29d8-15e1-4bbf-a561-29790d7837c7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{standard-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1",
										"copy"
									]
								},
								"description": "Not member"
							},
							"response": []
						},
						{
							"name": "409",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "90ea29d8-15e1-4bbf-a561-29790d7837c7",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied workspace\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/workspaces/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"workspaces",
										"1",
										"copy"
									]
								},
								"description": "Duplicated name"
							},
							"response": []
						}
					],
					"description": "copy workspace",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "09297de3-5c17-4971-9c0c-5b32279d5beb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b8b17b4a-15ff-4c2b-bf0e-0ae12aa349f0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "Workspaces routes",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fb052de6-2a2d-444e-a5c5-196fbe34afd5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f0af7732-b5f7-4ccf-9baa-9065c189b108",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Rules",
			"item": [
				{
					"name": "GET /rules",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name=&limit=&offset&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "rule name - insensitive"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get rules"
							},
							"response": []
						},
						{
							"name": "success - filter name",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name=D&limit=&offset&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": "D",
											"description": "rule name - insensitive"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get rules - filter name"
							},
							"response": []
						},
						{
							"name": "success - offest limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name=&limit=1&offset=2&sortOrder=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "rule name - insensitive"
										},
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "2",
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get rules - offset limit"
							},
							"response": []
						},
						{
							"name": "success - desc",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name=&limit=&offset=&sortOrder=desc",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": "",
											"description": "rule name - insensitive"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "success to get rules - desc"
							},
							"response": []
						},
						{
							"name": "400 - invalid parameter - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name&limit=asdf&offset&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "asdf",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - invalid parameter - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name&limit=&offset=asdf&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "asdf",
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - invalid parameter - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name&limit=&offset=&sortOrder=asdf",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": "asdf",
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rules?name&limit=asdf&offset&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "asdf",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7d9f901f-86b9-43c1-9cbc-a41ac2f613ea",
										"exec": [
											"pm.environment.set('token', 'Invalid token');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules?name&limit=asdf&offset&sortOrder",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									],
									"query": [
										{
											"key": "name",
											"value": null,
											"description": "rule name"
										},
										{
											"key": "limit",
											"value": "asdf",
											"description": "limit - default 10000000000"
										},
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						}
					],
					"description": "get rules",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST /rules",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"created new rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									]
								},
								"description": "success to create rule"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									]
								},
								"description": "Invalid rule name"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{host}}/rules",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7b959434-b5f1-427d-be1c-f0f025b4e7c7",
										"exec": [
											"pm.environment.set('token', 'Invalid token');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "409",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"created new rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules"
									]
								},
								"description": "Already exists"
							},
							"response": []
						}
					],
					"description": "create rule",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /rules/{rule_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1"
									]
								},
								"description": "success to get rule detail"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/abd",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"abd"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rules/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "245a675c-7a26-4a94-a8ba-4d2700885833",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"100"
									]
								},
								"description": "Rule not found"
							},
							"response": []
						}
					],
					"description": "Get rule detail",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE /rules/{rule_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/3",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"3"
									]
								},
								"description": "success to delete rule"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/abd",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"abd"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/rules/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6d4b6ba3-fd0a-40d0-8692-f9643ab8b5ef",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"100"
									]
								},
								"description": "Rule not found"
							},
							"response": []
						}
					],
					"description": "delete rule",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PATCH /rules/{rule_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"editable-rule-edited\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"2"
									]
								},
								"description": "success to patch rule"
							},
							"response": []
						},
						{
							"name": "400 - Invalid name",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"2"
									]
								},
								"description": "Invalid name"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/abc",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"abc"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user tok",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": 123\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"100"
									]
								},
								"description": "Rule not found"
							},
							"response": []
						},
						{
							"name": "409",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"2"
									]
								},
								"description": "Duplicated rule name"
							},
							"response": []
						}
					],
					"description": "patch rule",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST /rules/{rule_id}/copy",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"copy"
									]
								},
								"description": "success to copy rule"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"rule copied\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/abc/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"abc",
										"copy"
									]
								},
								"description": "Invalid id paremter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid name",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"copy"
									]
								},
								"description": "Invalid name"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"copy"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "478b944b-0c6a-4d2a-a13c-e3c6bd5c0950",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"copy"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "409",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "478b944b-0c6a-4d2a-a13c-e3c6bd5c0950",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"copied rule\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1/copy",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"copy"
									]
								},
								"description": "Duplicated rule name"
							},
							"response": []
						}
					],
					"description": "Copy rule",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /rules/{rule_id}/rule-versions",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "success to get rule versions by rule id"
							},
							"response": []
						},
						{
							"name": "success - offset limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/2/rule-versions?offset=3&limit=1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"2",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": "3",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "success to get rule versions by rule id - offset limit"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/abc/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"abc",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset=asd&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": "asd",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset=&limit=asd",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "asd",
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "af9fd9ce-7b15-4b98-a4fe-ba8236630f0b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "af9fd9ce-7b15-4b98-a4fe-ba8236630f0b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/100/rule-versions?offset&limit",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"100",
										"rule-versions"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										}
									]
								},
								"description": "Rule not found"
							},
							"response": []
						}
					],
					"description": "get rule versions",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST /rules/{rule_id}/rule-versions",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"versionNumber\": \"1.1\",\n\t\"notes\": \"note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1/rule-versions",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									]
								},
								"description": "success to create rule version"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - id",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/abc/rule-versions",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"abc",
										"rule-versions"
									]
								},
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - note",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"versionNumber\": \"1.1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1/rule-versions",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									]
								},
								"description": "Invalid parameters"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7dc225c6-f129-40f6-bd70-776fd9d23d8e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/1/rule-versions",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7dc225c6-f129-40f6-bd70-776fd9d23d8e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"versionNumber\": \"1.1\",\n\t\"notes\": \"note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/100/rule-versions",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"100",
										"rule-versions"
									]
								},
								"description": "Rule not found"
							},
							"response": []
						},
						{
							"name": "409",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"versionNumber\": \"1.1\",\n\t\"notes\": \"Version already exists\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/1/rule-versions",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"1",
										"rule-versions"
									]
								},
								"description": "version already exists"
							},
							"response": []
						}
					],
					"description": "create rule version under rule id",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "Rules routes",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "00d59002-4454-4f1e-8153-4067cb5e251b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d811a29d-c187-4515-b606-e0126687d79a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "RuleVersions",
			"item": [
				{
					"name": "GET /rule-versions/{rule_version_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "success to get rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/abc",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"abc"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "11486a39-62a3-417f-9b04-5de2bb7f952e",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"100"
									]
								},
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "get rule version detail",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "DELETE /rule-versions/{rule_version_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/10",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"10"
									]
								},
								"description": "success to delete rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/abc",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"abc"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f76eedc1-8dfb-429b-bfbb-328cdf0c45f5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "03030479-fc4b-4cc0-a1bc-6ab3b6c1f4df",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{standard-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Not Admin user"
							},
							"response": []
						},
						{
							"name": "403 - Rule version published",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/8",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"8"
									]
								},
								"description": "Rule version published"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"100"
									]
								},
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Delete rule version",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PATCH /rule-versions/{rule_version_id}",
					"item": [
						{
							"name": "success - add rule trees",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ruleTree\": [\n        {\n            \"id\": 1,\n            \"parentId\": null,\n            \"text\": \"root\"\n        },\n        {\n            \"id\": 2,\n            \"parentId\": 1,\n            \"text\": \"child-1\"\n        },\n        {\n            \"id\": 3,\n            \"parentId\": 2,\n            \"text\": \"child-2\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2"
									]
								},
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "success - remove rule tree",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ruleTree\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2"
									]
								},
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "success - add enabled vins",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabledVins\": [\n    \t{\n    \t\t\"vin\": \"new vin\"\n    \t}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2"
									]
								},
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "success - remove enabled vins",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabledVins\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2"
									]
								},
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "success - change testType, testCategory, specificTest",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"specificTest\": \"modified specific test\",\n    \"testCategory\": \"modified test category\",\n    \"testType\": \"modified test type\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2"
									]
								},
								"description": "success to patch rule versions"
							},
							"response": []
						},
						{
							"name": "400 - Invalid id parameter",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/abc",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"abc"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "400 - Rule tree must be an array",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleTree\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Rule tree must be an array"
							},
							"response": []
						},
						{
							"name": "400 - Rule tree root node validate",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleTree\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"parentId\": 1,\n\t\t\t\"text\": \"\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Rule tree root node validate"
							},
							"response": []
						},
						{
							"name": "400 - Rule tree field validate",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleTree\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"parentId\": 1\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Rule tree field validate"
							},
							"response": []
						},
						{
							"name": "400 - Enabled vins must be an array",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Enabled vins must be an array"
							},
							"response": []
						},
						{
							"name": "400 - Enabled vins field validate",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Enabled vins field validate"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c7cfeacd-8243-4db7-8e56-4e1a688a24f5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user tok",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 0,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - state In Review",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c7cfeacd-8243-4db7-8e56-4e1a688a24f5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/6",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"6"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c7cfeacd-8243-4db7-8e56-4e1a688a24f5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/8",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"8"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - locked rule version",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c7cfeacd-8243-4db7-8e56-4e1a688a24f5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/9",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"9"
									]
								},
								"description": "locked rule version"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c7cfeacd-8243-4db7-8e56-4e1a688a24f5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user tok",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enabledVins\": [\n\t\t{\n\t\t\t\"id\": 1,\n\t\t\t\"vin\": \"vin\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"100"
									]
								},
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "update rule versions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7315abd9-68bf-4295-a91e-5171a61f5b13",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8156661b-4230-4ca6-9aa7-415fa151c243",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/publish",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/4/publish",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"4",
										"publish"
									]
								},
								"description": "success to request publish rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/abc/publish",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"abc",
										"publish"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{host}}/rule-versions/1/publish",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"publish"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "75bd4bb8-2dda-4c1c-8b1e-a0f2b4b1c94f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1/publish",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"publish"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - state In Review",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/4/publish",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"4",
										"publish"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/8/publish",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"8",
										"publish"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/100/publish",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"100",
										"publish"
									]
								},
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "request publish rule version",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "48655a20-1d1c-4cf0-bdde-93367d5111bd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4ab242fc-df56-4feb-96d1-e682b663df30",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/reject",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/6/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"6",
										"reject"
									]
								},
								"description": "success to reject publish"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/abc/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"abc",
										"reject"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{host}}/rule-versions/1/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"reject"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "75bd4bb8-2dda-4c1c-8b1e-a0f2b4b1c94f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"reject"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "75bd4bb8-2dda-4c1c-8b1e-a0f2b4b1c94f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"reject"
									]
								},
								"description": "Not Admin user"
							},
							"response": []
						},
						{
							"name": "403 - state Draft",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/7/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"7",
										"reject"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/8/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"8",
										"reject"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/100/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"100",
										"reject"
									]
								},
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Reject rule version publish",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/approve",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/5/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"5",
										"approve"
									]
								},
								"description": "success to reject publish"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/abc/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"abc",
										"approve"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{host}}/rule-versions/1/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"approve"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "75bd4bb8-2dda-4c1c-8b1e-a0f2b4b1c94f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"approve"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not Admin",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "75bd4bb8-2dda-4c1c-8b1e-a0f2b4b1c94f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"approve"
									]
								},
								"description": "Not Admin user"
							},
							"response": []
						},
						{
							"name": "403 - state Draft",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/7/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"7",
										"approve"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/8/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"8",
										"approve"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/100/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"100",
										"approve"
									]
								},
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Approve to publish rule version",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/lock",
					"item": [
						{
							"name": "success - lock",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2",
										"lock"
									]
								},
								"description": "success to lock rule version"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - newIsLocked",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"lock"
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - id",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/abc/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"abc",
										"lock"
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{host}}/rule-versions/1/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"lock"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "75bd4bb8-2dda-4c1c-8b1e-a0f2b4b1c94f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"lock"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Not Admin and User who locked",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6171c068-f514-4faa-9966-f8e4be5bfd40",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{standard-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2",
										"lock"
									]
								},
								"description": "Not Admin and User who locked"
							},
							"response": []
						},
						{
							"name": "403 - state In Published",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/8/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"8",
										"lock"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "403 - already locked",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2",
										"lock"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/100/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"100",
										"lock"
									]
								},
								"description": "Rule version not found"
							},
							"response": []
						},
						{
							"name": "success - unlock",
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newIsLocked\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2/lock",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2",
										"lock"
									]
								},
								"description": "success to unlock rule version"
							},
							"response": []
						}
					],
					"description": "Lock or unlock rule version",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "PUT /rule-versions/{rule_version_id}/text",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"text edited\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2/text",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2",
										"text"
									]
								},
								"description": "success to modify rule version text"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/abc/text",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"abc",
										"text"
									]
								},
								"description": "Invalid id parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{host}}/rule-versions/1/text",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"text"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ce70b539-8222-475c-a87a-b3420647ed34",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rule-versions/1/text",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"text"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - state Published",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0f60a834-0fc2-42aa-a181-677d1825ca3f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"new text 2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/8/text",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"8",
										"text"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "93556c0c-c8c6-40e9-92f4-73a13a5a9168",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newText\": \"new text 3\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/100/text",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"100",
										"text"
									]
								},
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "Modify rule version text",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST /rule-versions/{rule_version_id}/notes",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/2/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"2",
										"notes"
									]
								},
								"description": "success to add note to rule version"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/abc/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"abc",
										"notes"
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/1/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"notes"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "62ccd273-38d9-4362-96e3-863796db82cd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/1/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"1",
										"notes"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "403 - Invalid state",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new notes\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/8/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"8",
										"notes"
									]
								},
								"description": "Invalid state"
							},
							"response": []
						},
						{
							"name": "404",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"newNotes\": \"new note\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rule-versions/100/notes",
									"host": [
										"{{host}}"
									],
									"path": [
										"rule-versions",
										"100",
										"notes"
									]
								},
								"description": "Rule version not found"
							},
							"response": []
						}
					],
					"description": "add note to rule version",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "RuleVersions routes",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Project",
			"item": [
				{
					"name": "GET /projects",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset&limit&sortOrder&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": null,
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "success - offset limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=1&limit=1&sortOrder&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "1",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "1",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": null,
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "success - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit=&sortOrder=desc&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "desc",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "success - filter name",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit=&sortOrder=&name=T2",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "T2",
											"description": "name filter"
										}
									]
								},
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - sortOrder",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit&sortOrder=aa&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "aa",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - offset",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=aa&limit&sortOrder=&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "aa",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "400 - Invalid parameter - limit",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit=aa&sortOrder=&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": "aa",
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/projects?offset=&limit&sortOrder=&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f79de23d-2b90-4008-8c43-0451140b6edf",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/projects?offset=&limit&sortOrder=&name=",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "offset - default 0"
										},
										{
											"key": "limit",
											"value": null,
											"description": "limit - default 10000000000"
										},
										{
											"key": "sortOrder",
											"value": "",
											"description": "asc, desc - default asc"
										},
										{
											"key": "name",
											"value": "",
											"description": "name filter"
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						}
					],
					"description": "get project list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "54e9f19f-2050-420a-b3f8-252b3aa0c232",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a84fac99-e030-4462-8b5f-3ae9881be2cf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /projects/{project_id}",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/projects/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects",
										"1"
									]
								},
								"description": "success to get project list"
							},
							"response": []
						},
						{
							"name": "400",
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host}}/projects/abc",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects",
										"abc"
									]
								},
								"description": "Invalid parameter"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/projects/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects",
										"1"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f79de23d-2b90-4008-8c43-0451140b6edf",
										"exec": [
											"pm.environment.set('token', 'Invalid token')"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"description": "user token",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/projects/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects",
										"1"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "404",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f79de23d-2b90-4008-8c43-0451140b6edf",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"description": "user token",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/projects/100",
									"host": [
										"{{host}}"
									],
									"path": [
										"projects",
										"100"
									]
								},
								"description": "Project not found"
							},
							"response": []
						}
					],
					"description": "get project detail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "54e9f19f-2050-420a-b3f8-252b3aa0c232",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a84fac99-e030-4462-8b5f-3ae9881be2cf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "Project routes",
			"protocolProfileBehavior": {}
		},
		{
			"name": "RuleFunctions",
			"item": [
				{
					"name": "POST /rules/functions/next-tokens",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/functions/next-tokens",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"next-tokens"
									]
								},
								"description": "Success to get next tokens"
							},
							"response": []
						},
						{
							"name": "400 - missing rule text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/next-tokens",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"next-tokens"
									]
								},
								"description": "Missing ruleText"
							},
							"response": []
						},
						{
							"name": "400 - incorrect grammar",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF THERE IST\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/functions/next-tokens",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"next-tokens"
									]
								},
								"description": "Incorrect grammar"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/next-tokens",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"next-tokens"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/next-tokens",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"next-tokens"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Get next token of ruleText",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "95cd9d79-fe56-4a6c-baef-bffc43d626fd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2b9a6d9e-ca12-4a64-8428-6edf9c610ac8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST/ rules/functions/translation",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA FOR C_BRAKE TEST THEN \\\"MISSING VALUE\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKEDRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE. CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF NO DATA FOR BRAKE_DRUM TEST AND NO DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK FOR SPECIFIC CRACKED DRUM ISSUES.\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE DRUMCRACK TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM THEN \\\"WEAK ACCEL BRAKE INHIBITOR. PROBABLY NOT THE MODE OF FAILURE UNLESS DRIVING UNDER THE INFLENCE OF ALCOHOL.\\\" OTHERWISE \\\"UNLIKELY TO BE ACCEL BRAKE MODE OF ACTION.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/functions/translation",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"translation"
									]
								},
								"description": "success to translate"
							},
							"response": []
						},
						{
							"name": "400 - missing rule text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{admin-token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/functions/translation",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"translation"
									]
								},
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "400 - incorrect grammar",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA C_BRAKE TEST THEN \\\"MISSING VALUE\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKEDRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE. CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF NO DATA FOR BRAKE_DRUM TEST AND NO DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK FOR SPECIFIC CRACKED DRUM ISSUES.\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE DRUMCRACK TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM THEN \\\"WEAK ACCEL BRAKE INHIBITOR. PROBABLY NOT THE MODE OF FAILURE UNLESS DRIVING UNDER THE INFLENCE OF ALCOHOL.\\\" OTHERWISE \\\"UNLIKELY TO BE ACCEL BRAKE MODE OF ACTION.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/functions/translation",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"translation"
									]
								},
								"description": "Incorrect grammar"
							},
							"response": []
						},
						{
							"name": "400 - incomplete grammar",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a8de7d3d-15f1-4304-b7bb-6af7f67d9d89",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA FOR\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/functions/translation",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"translation"
									]
								},
								"description": "Incomplete grammar"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/translation",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"translation"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/translation",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"translation"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Translate rule text",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST /rules/functions/parses",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA FOR C_BRAKE TEST THEN \\\"MISSING VALUE\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKEDRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE. CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF NO DATA FOR BRAKE_DRUM TEST AND NO DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK FOR SPECIFIC CRACKED DRUM ISSUES.\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE DRUMCRACK TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM THEN \\\"WEAK ACCEL BRAKE INHIBITOR. PROBABLY NOT THE MODE OF FAILURE UNLESS DRIVING UNDER THE INFLENCE OF ALCOHOL.\\\" OTHERWISE \\\"UNLIKELY TO BE ACCEL BRAKE MODE OF ACTION.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/functions/parses",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"parses"
									]
								},
								"description": "success to parse"
							},
							"response": []
						},
						{
							"name": "400 - missing rule text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/functions/parses",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"parses"
									]
								},
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/parses",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"parses"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{host}}/rules/functions/parses",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"parses"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Return whether or not ruleText parses",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST /rules/functions/is-complete",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"ruleText\": \"IF NO DATA FOR C_BRAKE TEST THEN \\\"MISSING VALUE\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKEDRUM TEST THEN \\\"MODE OF FAILURE IS LIKELY TO BE ACCEL BRAKE. CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF NO DATA FOR BRAKE_DRUM TEST AND NO DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <0.25UM THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK FOR SPECIFIC CRACKED DRUM ISSUES.\\\" OTHERWISE IF THERE IS DATA FOR BRAKE_DRUM TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE BRAKE_DRUM TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF THERE IS DATA FOR DRUMCRACK TEST AND FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM AND COMPONENT IS AT LEAST 24X LESS POWERFUL IN THE DRUMCRACK TEST THEN \\\"MODE OF FAILURE IS POSSIBLY ACCEL BRAKE CRITICAL BREAKDOWN. CHECK INTENSITY.\\\" OTHERWISE IF FIFTY_PERCENT_POINT FOR C_BRAKE TEST IS <30UM THEN \\\"WEAK ACCEL BRAKE INHIBITOR. PROBABLY NOT THE MODE OF FAILURE UNLESS DRIVING UNDER THE INFLENCE OF ALCOHOL.\\\" OTHERWISE \\\"UNLIKELY TO BE ACCEL BRAKE MODE OF ACTION.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/rules/functions/is-complete",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"is-complete"
									]
								},
								"description": "success to get completed state"
							},
							"response": []
						},
						{
							"name": "400 - missing rule text",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/is-complete",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"is-complete"
									]
								},
								"description": "Missing rule text"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{invalid-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/is-complete",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"is-complete"
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/is-complete",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"is-complete"
									]
								},
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Return whether or not ruleText is completed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c99e40dc-baff-4c13-89a6-8e821c0b6e88",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6d83f025-daeb-4dc0-b9af-7af02314b848",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "GET /rules/functions/specific-tests",
					"item": [
						{
							"name": "success",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{admin-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/specific-tests?category=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"specific-tests"
									],
									"query": [
										{
											"key": "category",
											"value": ""
										}
									]
								},
								"description": "success to get tests"
							},
							"response": []
						},
						{
							"name": "401 - Invalid token",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}"
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/specific-tests?category=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"specific-tests"
									],
									"query": [
										{
											"key": "category",
											"value": ""
										}
									]
								},
								"description": "Invalid token"
							},
							"response": []
						},
						{
							"name": "401 - Token is missing",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{invalid-token}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/rules/functions/specific-tests?category=",
									"host": [
										"{{host}}"
									],
									"path": [
										"rules",
										"functions",
										"specific-tests"
									],
									"query": [
										{
											"key": "category",
											"value": ""
										}
									]
								},
								"description": "Token is missing"
							},
							"response": []
						}
					],
					"description": "Get specific tests by category",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "Endpoints of the rule functions",
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "baaabe3f-95e3-4d75-9bfb-f7480cad246e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d4304e22-6160-49a7-b451-edf671eefb6f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}